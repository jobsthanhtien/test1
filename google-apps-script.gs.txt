/**************************************************************************************************
 * HƯỚNG DẪN:
 * 1. Mở file này.
 * 2. Nhấn Ctrl+A (hoặc Cmd+A trên Mac) để chọn TOÀN BỘ nội dung.
 * 3. Nhấn Ctrl+C (hoặc Cmd+C) để sao chép.
 * 4. Quay lại trình soạn thảo Google Apps Script (file Code.gs).
 * 5. Xóa hết mã cũ trong Code.gs.
 * 6. Nhấn Ctrl+V (hoặc Cmd+V) để dán mã mới vào.
 * 7. Triển khai lại phiên bản mới (Deploy > Manage Deployments > Edit > New Version > Deploy).
 * 8. Sau khi triển khai, truy cập URL ứng dụng web trên trình duyệt, bạn sẽ thấy "Script is running.".
 **************************************************************************************************/

/**
 * Handles GET requests (e.g., visiting the URL in a browser) to confirm deployment.
 * This function is required for the web app to respond to browser visits.
 */
function doGet(e) {
  return HtmlService.createHtmlOutput("<b>Script is running.</b><br/>This page confirms the web app is deployed correctly. The app sends data via POST requests.");
}

/**
 * Handles CORS preflight requests from the browser.
 * This is necessary to allow the web application to communicate with the script.
 */
function doOptions(e) {
  return ContentService.createTextOutput()
    .addHeader("Access-Control-Allow-Origin", "*")
    .addHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
    .addHeader("Access-Control-Allow-Headers", "Content-Type");
}

/**
 * Handles the actual data submission from the web application.
 */
function doPost(e) {
  try {
    // Check for postData and contents to prevent errors
    if (!e || !e.postData || !e.postData.contents) {
      throw new Error("No data received in POST request.");
    }

    var requestData = JSON.parse(e.postData.contents);
    var sheetName = requestData.sheetName;
    var data = requestData.data;
    
    if (!sheetName || !data) {
      throw new Error("Invalid request format. 'sheetName' and 'data' are required.");
    }
    
    var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    var sheet = spreadsheet.getSheetByName(sheetName);
    
    if (!sheet) {
      // If sheet doesn't exist, create it with headers
      sheet = spreadsheet.insertSheet(sheetName);
      sheet.appendRow(Object.keys(data));
    }
    
    var headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];
    var rowData = headers.map(function(header) {
      // Use the value from the data object if it exists, otherwise, leave it blank.
      return data[header] !== undefined ? data[header] : "";
    });
    
    sheet.appendRow(rowData);
    
    var response = { "status": "success", "message": "Row added to " + sheetName };
    return ContentService.createTextOutput(JSON.stringify(response))
      .setMimeType(ContentService.MimeType.JSON)
      .addHeader("Access-Control-Allow-Origin", "*");
      
  } catch (error) {
    // Log the actual error to the Apps Script logger for easier debugging
    Logger.log("Error in doPost: " + error.toString());
    var errorResponse = { "status": "error", "message": error.message };
    return ContentService.createTextOutput(JSON.stringify(errorResponse))
      .setMimeType(ContentService.MimeType.JSON)
      .addHeader("Access-Control-Allow-Origin", "*");
  }
}
